name: CI Backend

on:
  push:
    branches:
      - main

env:
  POETRY_VERSION: 1.8.4
  PYTHON_VERSION: 3.11
  AWS_REGION: eu-west-1
  ECR_REPOSITORY: pdf-chat-api

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install just
        uses: taiki-e/install-action@just
      - name: Install Poetry
        uses: Gr1N/setup-poetry@v8
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry/virtualenvs
            ~/.cache/pip
            ~/.local/share/poetry
          key: ${{ runner.os }}-py${{ env.PYTHON_VERSION }}-poetry${{ env.POETRY_VERSION }}-${{ hashFiles('backend/poetry.lock', 'backend/pyproject.toml') }}
      - name: Install dependencies
        working-directory: ./backend
        run: poetry install --no-root
      - name: Lint
        working-directory: ./backend
        run: just lint-check
      - name: Test
        working-directory: ./backend
        run: just test

  build-and-push:
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Get short SHA
        id: sha
        run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ steps.sha.outputs.short_sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
